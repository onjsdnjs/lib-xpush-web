<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   creationComplete="application1_creationCompleteHandler(event)">
	<s:layout>
		<s:VerticalLayout >
			
		</s:VerticalLayout>
	</s:layout>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.pnwrain.flashsocket.FlashSocket;
			import com.pnwrain.flashsocket.events.FlashSocketEvent;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			[Bindable]
			protected var socket:FlashSocket;
			
			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				//Security.loadPolicyFile("xmlsocket://10.177.210.67:10843");
				socket = new FlashSocket("114.31.50.122:9000/channel?A=P-00001&C=zztv&S=46&D=WEB&MD=CHANNEL_ONLY ");
				socket.addEventListener(FlashSocketEvent.CONNECT, onConnect);
				socket.addEventListener(FlashSocketEvent.MESSAGE, onMessage);
				socket.addEventListener(FlashSocketEvent.IO_ERROR, onError);
				socket.addEventListener(FlashSocketEvent.CONNECT_ERROR, onError);
				socket.addEventListener(FlashSocketEvent.SECURITY_ERROR, onError);
				
				var intervalId:uint = setInterval(myRepeatingFunction, 10000, "Hello", "World");				
				
				socket.addEventListener("server", myCustomMessageHandler);
			}
			public function myRepeatingFunction():void {
				ExternalInterface.call('console.log',arguments[0] + " " + arguments[1]);
			}
			protected function myCustomMessageHandler(event:FlashSocketEvent):void{
				Alert.show('we got a custom event!')    
			}
			
			protected function onConnect(event:FlashSocketEvent):void {
				Alert.show('onConnect');
				clearStatus();
				
			}
			
			protected function onError(event:FlashSocketEvent):void {
				Alert.show('something went wrong');
				setStatus("something went wrong");
			}
			
			protected function setStatus(msg:String):void{
				
				status.text = msg;
				
			}
			protected function clearStatus():void{
				
				status.text = "";
				this.currentState = "";
				
			}
			
			protected function onMessage(event:FlashSocketEvent):void{
				Alert.show('we got message: ' + event.data);
				socket.send({msgdata: event.data},"my other event");
				
			}
			
		]]>
	</fx:Script>
	<s:Label id="status" />
	<s:Label id="glabel" />
	
	
</s:Application>